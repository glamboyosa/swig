name: CI

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  test:
    runs-on: ubuntu-latest
    
    services:
      postgres:
        image: postgres:15
        env:
          POSTGRES_PASSWORD: postgres
          POSTGRES_DB: swig_test
        ports:
          - 5432:5432
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

    steps:
    - uses: actions/checkout@v4

    - name: Set up Go
      uses: actions/setup-go@v4
      with:
        go-version: '1.21'
        cache: true
        cache-dependency-path: swig-go/go.sum

    - name: Install dependencies
      working-directory: .
      run: go mod download

    - name: Run tests
      working-directory: .
      run: |
        go test -v -race ./...
      env:
        POSTGRES_URL: postgres://postgres:postgres@localhost:5432/swig_test

  release:
    needs: test
    if: github.event_name == 'push' && github.ref == 'refs/heads/main'
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v4
      with:
        fetch-depth: 0

    - name: Get latest tag
      id: get_tag
      run: |
        latest_tag=$(git describe --tags --abbrev=0 2>/dev/null || echo "v0.0.0-alpha")
        echo "LATEST_TAG=$latest_tag" >> $GITHUB_ENV

    - name: Bump version
      id: bump_version
      run: |
          current_version=${LATEST_TAG#v}
          if [[ $current_version == *"-alpha"* ]]; then
            base_version=${current_version%-alpha}
            IFS='.' read -r major minor patch <<< "$base_version"
            # If we're still on 0.0.x, jump to 0.1.0
            if [[ $major == "0" && $minor == "0" ]]; then
              new_version="0.1.0-alpha"
            else
              new_version="$major.$minor.$((patch+1))-alpha"
            fi
          else
            new_version="0.1.0-alpha"
          fi
          echo "version=v$new_version" >> "$GITHUB_OUTPUT"
  
    - name: Create and push tag
      run: |
        git config --local user.email "action@github.com"
        git config --local user.name "GitHub Action"
        git tag -a ${{ steps.bump_version.outputs.version }} -m "Release ${{ steps.bump_version.outputs.version }}"
        git push origin ${{ steps.bump_version.outputs.version }} 